VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "CSlctFilePath"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
'Includes PfncobjSetFileDialogForFile
'Includes PfncstrSetDefaultFolderPath
'Includes PfncstrSetDefaultFilePath
'Includes PfixSetFileDialogFixedFilter
'Includes PfixSetFileDialogVariableFilter
'Includes PfixSetFileDialogForFileInitial
'Includes PfixSelectFileByFileDialog
'Includes PfixGetFileNameArrayByFSO
'Includes PfixDataPutInClipboard

Option Explicit
Option Base 1

'◆ClassProc名_ファイルを選択してそのパスを取得する
'Rev.011

'//モジュールメモリ
  Private Const meMstrMdlName As String = "CSlctFilePath"
  
'//PropertyGet_出力データ
  Private Lc As Long
  Private myXlonFileCnt As Long, _
            myZstrFileName() As String, myZstrFilePath() As String
  
'//PropertySetLet_入力データ
  Private myXlonFDType As Long
  Private myXstrDfltFldrPath As String, myXstrDfltFilePath As String
  Private myXstrExtsn As String
  Private myZstrAddFltr() As String, myXbisFltrClr As Boolean, myXlonFltrIndx As Long
  Private myXlonIniView As Long, myXbisMultSlct As Boolean
  
'//モジュール内変数_制御信号
  Private myXbisExitFlag As Boolean
  
'//モジュール内変数_データ
  Private myXobjFileDialog As Object
  Private myXstrDfltPath As String

'iniP_モジュール内変数を初期化する
Private Sub initializeModuleVariables()
    myXbisExitFlag = False
    
    Set myXobjFileDialog = Nothing
    myXstrDfltPath = Empty
End Sub

'-----------------------------------------------------------------------------------------------

Public Property Get getOptnBase() As Long
  Dim myZlonTmp(1) As Long, L As Long: L = LBound(myZlonTmp)
    getOptnBase = L
End Property

Public Property Get getFileCnt() As Long
    getFileCnt = myXlonFileCnt
End Property

Public Property Get getFileNameAry(ByVal i As Long) As String
    getFileNameAry = myZstrFileName(i)
'myZstrFileName(i) : ファイル名
End Property

Public Property Get getFilePathAry(ByVal i As Long) As String
    getFilePathAry = myZstrFilePath(i)
'myZstrFilePath(i) : ファイルパス
End Property

'iniP_出力変数を初期化する
Private Sub initializeOutputVariables()
    myXlonFileCnt = Empty
    Erase myZstrFileName: Erase myZstrFilePath
End Sub

'-----------------------------------------------------------------------------------------------

Public Property Let letFDType(ByVal RHS As String)
    myXlonFDType = RHS
'myXlonFDType = msoFileDialogFilePicker : ファイルを選択
'myXlonFDType = msoFileDialogOpen       : ファイルを開く
'myXlonFDType = msoFileDialogSaveAs     : ファイルを保存
End Property

Public Property Let letDfltFldrPath(ByVal RHS As String)
    myXstrDfltFldrPath = RHS
'myXstrDfltFldrPath = ""  : デフォルトパス指定無し
'myXstrDfltFldrPath = "C" : Cドライブをデフォルトパスに指定
'myXstrDfltFldrPath = "1" : このブックの親フォルダをデフォルトパスに指定
'myXstrDfltFldrPath = "2" : アクティブブックの親フォルダをデフォルトパスに指定
'myXstrDfltFldrPath = "*" : デフォルトパスを指定
End Property

Public Property Let letDfltFilePath(ByVal RHS As String)
    myXstrDfltFilePath = RHS
'myXstrDfltFilePath = ""  : デフォルトパス指定無し
'myXstrDfltFilePath = "1" : このブックをデフォルトパスに指定
'myXstrDfltFilePath = "2" : アクティブブックをデフォルトパスに指定
'myXstrDfltFilePath = "*" : デフォルトパスを指定
End Property

Public Property Let letExtsn(ByVal RHS As String)
    myXstrExtsn = RHS
End Property

Public Property Let letAddFltr(ByRef RHS() As String)
    myZstrAddFltr() = RHS()
'myZstrAddFltr(i, 1) : ファイルの候補を指定する文字列(ファイル)
'myZstrAddFltr(i, 2) : ファイルの候補を指定する文字列(フィルタ文字列)
End Property

Public Property Let letFltrClr(ByVal RHS As Boolean)
    myXbisFltrClr = RHS
'myXbisFltrClr = False : ファイルフィルタを初期化せずに追加する
'myXbisFltrClr = True  : ファイルフィルタを初期化する
End Property

Public Property Let letFltrIndx(ByVal RHS As Long)
    myXlonFltrIndx = RHS
'myXlonFltrIndx = 1〜 : ファイルフィルタの初期選択
End Property

Public Property Let letIniView(ByVal RHS As Long)
    myXlonIniView = RHS
'myXlonIniView = msoFileDialogViewDetails    : ファイルを詳細情報と共に一覧表示
'myXlonIniView = msoFileDialogViewLargeIcons : ファイルを大きいアイコンで表示
'myXlonIniView = msoFileDialogViewList       : ファイルを詳細情報なしで一覧表示
'myXlonIniView = msoFileDialogViewPreview    : ファイルの一覧を表示し、選択したファイルをプレビュー ウィンドウ枠に表示
'myXlonIniView = msoFileDialogViewProperties : ファイルの一覧を表示し、選択したファイルのプロパティをウィンドウ枠に表示
'myXlonIniView = msoFileDialogViewSmallIcons : ファイルを小さいアイコンで表示
'myXlonIniView = msoFileDialogViewThumbnail  : ファイルを縮小表示
'myXlonIniView = msoFileDialogViewTiles      : ファイルをアイコンで並べて表示
'myXlonIniView = msoFileDialogViewWebView    : ファイルを Web 表示
End Property

Public Property Let letMultSlct(ByVal RHS As Boolean)
    myXbisMultSlct = RHS
'myXbisMultSlct = False : 複数のファイルを選択不可能
'myXbisMultSlct = True  : 複数のファイルを選択可能
End Property

'checkP_入力変数内容を確認する
Private Sub checkInputVariables()
    myXbisExitFlag = False

    If myXlonFDType < 1 Or myXlonFDType > 3 Then myXlonFDType = msoFileDialogFilePicker
    If myXlonIniView < 1 Or myXlonIniView > 9 Then myXlonIniView = msoFileDialogViewList
    
'//指定拡張子を確認
    If InStr(myXstrExtsn, ".") <> 0 Then
        myXstrExtsn = Mid(myXstrExtsn, InStr(myXstrExtsn, ".") + 1)
        myXstrExtsn = LCase(myXstrExtsn)
    End If
    
    If myXbisFltrClr = False Then
        If Left(myXstrExtsn, 2) = "xl" Then
            myXlonFltrIndx = 2
        ElseIf myXstrExtsn = "txt" Then
            myXlonFltrIndx = 3
        ElseIf myXstrExtsn = "csv" Then
            myXlonFltrIndx = 4
        ElseIf myXstrExtsn = "jpg" Then
            myXlonFltrIndx = 5
        ElseIf myXstrExtsn = "bmp" Then
            myXlonFltrIndx = 6
        ElseIf myXstrExtsn = "png" Then
            myXlonFltrIndx = 7
        Else
            myXlonFltrIndx = myXlonFltrIndx
        End If
    End If
    
    Exit Sub
ExitPath:
    myXbisExitFlag = True
End Sub

'-----------------------------------------------------------------------------------------------

'PublicP_
Public Sub exeProc()
    Call ctrProc
End Sub

'CtrlP_
Private Sub ctrProc()
    Call initializeOutputVariables
    Call initializeModuleVariables
    Call checkInputVariables: If myXbisExitFlag = True Then GoTo ExitPath
'    Debug.Print "PassFlag: " & meMstrMdlName & "1"  'PassFlag
    
'//C:FileDialogのデフォルト設定
    Call setProc
    If myXbisExitFlag = True Then GoTo ExitPath
'    Debug.Print "PassFlag: " & meMstrMdlName & "2"  'PassFlag
    
'//S:ダイアログボックスでファイルパス一覧を取得
    Call snsProc
    If myXbisExitFlag = True Then GoTo ExitPath
'    Debug.Print "PassFlag: " & meMstrMdlName & "3"  'PassFlag
    
'//クリップボードにデータを格納
  Dim L As Long
    If myXlonFileCnt = 1 Then
        L = LBound(myZstrFilePath)
        Call PfixDataPutInClipboard(myZstrFilePath(L))
    End If
'    Debug.Print "PassFlag: " & meMstrMdlName & "4"  'PassFlag
    
ExitPath:
    Call initializeModuleVariables
End Sub

'SetP_FileDialogのデフォルト設定
Private Sub setProc()
    myXbisExitFlag = False
    
'//FileDialogオブジェクトを設定
    Set myXobjFileDialog = PfncobjSetFileDialogForFile(myXlonFDType)
    If myXobjFileDialog Is Nothing Then GoTo ExitPath
    
'//デフォルトパスを設定
    myXstrDfltFldrPath = PfncstrSetDefaultFolderPath(myXstrDfltFldrPath)
    myXstrDfltFilePath = PfncstrSetDefaultFilePath(myXstrDfltFilePath)
    
    If myXstrDfltFldrPath <> "" And myXstrDfltFilePath <> "" Then
        myXstrDfltPath = myXstrDfltFilePath
    ElseIf myXstrDfltFldrPath = "" And myXstrDfltFilePath <> "" Then
        myXstrDfltPath = myXstrDfltFilePath
    ElseIf myXstrDfltFldrPath <> "" And myXstrDfltFilePath = "" Then
        myXstrDfltPath = myXstrDfltFldrPath
    Else
        myXstrDfltPath = ""
    End If
    
'//ファイル選択用のFileDialogオブジェクトのフィルタ固定値を設定
    Call PfixSetFileDialogFixedFilter(myXobjFileDialog, myXlonFltrIndx)
    
'//ファイル選択用のFileDialogオブジェクトのフィルタ可変値を設定
    Call PfixSetFileDialogVariableFilter( _
            myXobjFileDialog, _
            myZstrAddFltr, myXbisFltrClr, myXlonFltrIndx)
    
'//FileDialogオブジェクトの初期状態を設定
    Call PfixSetFileDialogForFileInitial( _
            myXobjFileDialog, _
            myXlonIniView, myXstrDfltPath, myXbisMultSlct)
    
    If myXobjFileDialog Is Nothing Then GoTo ExitPath
    Exit Sub
ExitPath:
    myXbisExitFlag = True
End Sub

'SnsP_ダイアログボックスでファイルパス一覧を取得
Private Sub snsProc()
    myXbisExitFlag = False
    
'//FileDialogオブジェクトを使用してファイルを選択
    Call PfixSelectFileByFileDialog(myXlonFileCnt, myZstrFilePath, myXobjFileDialog)
    If myXlonFileCnt <= 0 Then GoTo ExitPath
    
'//指定ファイルパス一覧のファイル名一覧を取得(FileSystemObject使用)
    Call PfixGetFileNameArrayByFSO(myXlonFileCnt, myZstrFileName, myZstrFilePath)
    If myXlonFileCnt <= 0 Then GoTo ExitPath
    
    Exit Sub
ExitPath:
    myXbisExitFlag = True
End Sub

'===============================================================================================

 '定型Ｆ_ファイル選択用のFileDialogオブジェクトを設定する
Private Function PfncobjSetFileDialogForFile( _
            Optional ByVal coXlonFDType As Long = msoFileDialogFilePicker) As Object
'coXlonFDType = msoFileDialogFilePicker : ファイルを選択
'coXlonFDType = msoFileDialogOpen       : ファイルを開く
'coXlonFDType = msoFileDialogSaveAs     : ファイルを保存
    Set PfncobjSetFileDialogForFile = Nothing
  Dim myXobjFileDialog As Object
    On Error GoTo ExitPath
    Set myXobjFileDialog = Application.FileDialog(coXlonFDType)
    myXobjFileDialog.Filters.Clear
    Select Case coXlonFDType
        Case msoFileDialogFilePicker
            myXobjFileDialog.Title = "ファイルの選択"
            myXobjFileDialog.ButtonName = "選択"
        Case msoFileDialogOpen
            myXobjFileDialog.Title = "ファイルを開く"
            myXobjFileDialog.ButtonName = "開く"
        Case msoFileDialogSaveAs
            myXobjFileDialog.Title = "ファイルを保存"
            myXobjFileDialog.ButtonName = "保存"
        Case Else: Exit Function
    End Select
    On Error GoTo 0
    Set PfncobjSetFileDialogForFile = myXobjFileDialog
    Set myXobjFileDialog = Nothing
ExitPath:
End Function

 '定型Ｆ_デフォルトフォルダパスを設定する
Private Function PfncstrSetDefaultFolderPath( _
            Optional ByVal coXstrDflt As String = "") As String
'coXstrDflt = ""  : デフォルトパス指定無し
'coXstrDflt = "C" : Cドライブをデフォルトパスに指定
'coXstrDflt = "1" : このブックの親フォルダをデフォルトパスに指定
'coXstrDflt = "2" : アクティブブックの親フォルダをデフォルトパスに指定
'coXstrDflt = "*" : デフォルトパスを指定
    PfncstrSetDefaultFolderPath = Empty
  Dim myXobjFSO As Object: Set myXobjFSO = CreateObject("Scripting.FileSystemObject")
  Dim myXstrDfltPath As String, myXbisDfltExist As Boolean
    With myXobjFSO
        Select Case coXstrDflt
            Case "C": myXstrDfltPath = "C:\"
            Case "1": myXstrDfltPath = .GetParentFolderName(ThisWorkbook.Path)
            Case "2": myXstrDfltPath = .GetParentFolderName(ActiveWorkbook.Path)
            Case Else: myXstrDfltPath = coXstrDflt
        End Select
        myXbisDfltExist = .FolderExists(myXstrDfltPath)
    End With
    If myXbisDfltExist = True Then PfncstrSetDefaultFolderPath = myXstrDfltPath
    Set myXobjFSO = Nothing
End Function

 '定型Ｆ_デフォルトファイルパスを設定する
Private Function PfncstrSetDefaultFilePath( _
            Optional ByVal coXstrDflt As String = "") As String
'coXstrDflt = ""  : デフォルトパス指定無し
'coXstrDflt = "1" : このブックをデフォルトパスに指定
'coXstrDflt = "2" : アクティブブックをデフォルトパスに指定
'coXstrDflt = "*" : デフォルトパスを指定
    PfncstrSetDefaultFilePath = Empty
  Dim myXobjFSO As Object: Set myXobjFSO = CreateObject("Scripting.FileSystemObject")
  Dim myXstrDfltPath As String, myXbisDfltExist As Boolean
    Select Case coXstrDflt
        Case "1": myXstrDfltPath = ThisWorkbook.FullName
        Case "2": myXstrDfltPath = ActiveWorkbook.FullName
        Case Else: myXstrDfltPath = coXstrDflt
    End Select
    myXbisDfltExist = myXobjFSO.FileExists(myXstrDfltPath)
    If myXbisDfltExist = True Then PfncstrSetDefaultFilePath = myXstrDfltPath
    Set myXobjFSO = Nothing
End Function

 '定型Ｐ_ファイル選択用のFileDialogオブジェクトのフィルタ固定値を設定する
Private Sub PfixSetFileDialogFixedFilter( _
            myXobjFileDialog As Object, _
            Optional ByVal coXlonFltrIndx As Long = 1)
'coXlonFltrIndx = 1〜 : ファイルフィルタの初期選択
  Const coXlonFDType As Long = msoFileDialogFilePicker  'ファイルを選択
    If myXobjFileDialog Is Nothing Then Exit Sub
  Dim i As Long: i = 0
    With myXobjFileDialog
        .Filters.Clear
        i = i + 1: Call .Filters.Add("全てのファイル", "*.*", i)
        i = i + 1: Call .Filters.Add("Excel File", "*.xl*", i)
        i = i + 1: Call .Filters.Add("Text File", "*.txt", i)
        i = i + 1: Call .Filters.Add("CSV File", "*.csv", i)
        i = i + 1: Call .Filters.Add("画像ファイル", "*.jpg", i)
        i = i + 1: Call .Filters.Add("画像ファイル", "*.bmp", i)
        i = i + 1: Call .Filters.Add("画像ファイル", "*.png", i)
        If coXlonFltrIndx < 1 Or coXlonFltrIndx > i Then coXlonFltrIndx = 1
        .FilterIndex = coXlonFltrIndx
    End With
End Sub

 '定型Ｐ_ファイル選択用のFileDialogオブジェクトのフィルタ可変値を設定する
Private Sub PfixSetFileDialogVariableFilter( _
            myXobjFileDialog As Object, _
            ByRef myZstrAddFltr() As String, _
            Optional ByVal coXbisFltrClr As Boolean = False, _
            Optional ByVal coXlonFltrIndx As Long = 1)
'myZstrAddFltr(i, 1) : ファイルの候補を指定する文字列(ファイル説明)
'myZstrAddFltr(i, 2) : ファイルの候補を指定する文字列(フィルタ拡張子)
'coXbisFltrClr = False : ファイルフィルタを初期化せずに追加する
'coXbisFltrClr = True  : ファイルフィルタを初期化する
'coXlonFltrIndx = 1〜 : ファイルフィルタの初期選択
    If myXobjFileDialog Is Nothing Then Exit Sub
  Dim myXstrTmp As String, L As Long, U As Long
    On Error GoTo ExitPath
    L = LBound(myZstrAddFltr, 1): U = UBound(myZstrAddFltr, 1)
    myXstrTmp = myZstrAddFltr(L, L)
    On Error GoTo 0
    If UBound(myZstrAddFltr, 2) <> L + 1 Then Exit Sub
  Dim i As Long, myXstrFltrFile As String, myXstrFltrExtsn As String, n As Long
    If coXbisFltrClr = False Then
        n = myXobjFileDialog.Filters.Count
    Else
        myXobjFileDialog.Filters.Clear: n = 0
    End If
    On Error Resume Next
    For i = L To U
        myXstrFltrFile = Empty: myXstrFltrExtsn = Empty
        myXstrFltrFile = myZstrAddFltr(i, L + 0)
        myXstrFltrExtsn = myZstrAddFltr(i, L + 1)
        If myXstrFltrExtsn <> "" Then
            n = n + 1
            Call myXobjFileDialog.Filters.Add(myXstrFltrFile, myXstrFltrExtsn, n)
        End If
    Next i
    On Error GoTo 0
    If coXlonFltrIndx < 1 Or coXlonFltrIndx > n Then coXlonFltrIndx = 1
    myXobjFileDialog.FilterIndex = coXlonFltrIndx
ExitPath:
End Sub

 '定型Ｐ_ファイル選択用のFileDialogオブジェクトの初期状態を設定する
Private Sub PfixSetFileDialogForFileInitial( _
            myXobjFileDialog As Object, _
            Optional ByVal coXlonIniView As Long = msoFileDialogViewList, _
            Optional ByVal coXstrDfltPath As String = "", _
            Optional ByVal coXbisMultSlct As Boolean = False)
'coXlonIniView = msoFileDialogViewDetails    : ファイルを詳細情報と共に一覧表示
'coXlonIniView = msoFileDialogViewLargeIcons : ファイルを大きいアイコンで表示
'coXlonIniView = msoFileDialogViewList       : ファイルを詳細情報なしで一覧表示
'coXlonIniView = msoFileDialogViewPreview    : ファイルの一覧を表示し、選択したファイルをプレビュー ウィンドウ枠に表示
'coXlonIniView = msoFileDialogViewProperties : ファイルの一覧を表示し、選択したファイルのプロパティをウィンドウ枠に表示
'coXlonIniView = msoFileDialogViewSmallIcons : ファイルを小さいアイコンで表示
'coXlonIniView = msoFileDialogViewThumbnail  : ファイルを縮小表示
'coXlonIniView = msoFileDialogViewTiles      : ファイルをアイコンで並べて表示
'coXlonIniView = msoFileDialogViewWebView    : ファイルを Web 表示
'coXstrDfltPath : ファイルパス指定→ダイアログボックスにファイル名を表示
'coXstrDfltPath : フォルダパス指定→デフォルトフォルダを表示
'coXbisMultSlct = False : 複数のファイルを選択不可能
'coXbisMultSlct = True  : 複数のファイルを選択可能
    If myXobjFileDialog Is Nothing Then Exit Sub
    On Error Resume Next
    With myXobjFileDialog
        .InitialView = coXlonIniView
        .InitialFileName = coXstrDfltPath
        .AllowMultiSelect = coXbisMultSlct
    End With
    On Error GoTo 0
End Sub

 '定型Ｐ_ファイル選択用のFileDialogオブジェクトを使用してファイルを選択する
Private Sub PfixSelectFileByFileDialog( _
            myXlonFileCnt As Long, myZstrFilePath() As String, _
            ByVal myXobjFileDialog As Object)
'myZstrFilePath(i) : ファイルパス
    myXlonFileCnt = Empty: Erase myZstrFilePath
    If myXobjFileDialog Is Nothing Then Exit Sub
  Dim myZlonTmp(1) As Long, L As Long: L = LBound(myZlonTmp)
  Dim myXvarTmpPath As Variant, n As Long: n = L - 1
  Dim myXlonFDType As Long
    With myXobjFileDialog
        myXlonFDType = .DialogType
        If .Show = False Then Exit Sub
        myXlonFileCnt = .SelectedItems.Count
        ReDim myZstrFilePath(myXlonFileCnt) As String
        For Each myXvarTmpPath In .SelectedItems
            n = n + 1: myZstrFilePath(n) = CStr(myXvarTmpPath)
            If myXlonFDType = msoFileDialogOpen Or _
                myXlonFDType = msoFileDialogSaveAs Then .Execute
        Next
    End With
End Sub

 '定型Ｐ_指定ファイルパス一覧のファイル名一覧を取得する(FileSystemObject使用)
Private Sub PfixGetFileNameArrayByFSO( _
            myXlonFileCnt As Long, myZstrFileName() As String, _
            ByRef myZstrFilePath() As String)
'myZstrFileName(i) : ファイル名
'myZstrFilePath(i) : ファイルパス
    myXlonFileCnt = Empty: Erase myZstrFileName
  Dim myXstrTmp As String, Li As Long, Ui As Long
    On Error GoTo ExitPath
    Li = LBound(myZstrFilePath): Ui = UBound(myZstrFilePath)
    myXstrTmp = myZstrFilePath(Li)
    On Error GoTo 0
    myXlonFileCnt = Ui - Li + 1
  Dim myZlonTmp(1) As Long, Lo As Long: Lo = LBound(myZlonTmp)
  Dim i As Long, myXbisFileExist As Boolean
    i = myXlonFileCnt - (1 - Lo): ReDim myZstrFileName(i) As String
  Dim myXobjFSO As Object: Set myXobjFSO = CreateObject("Scripting.FileSystemObject")
    For i = LBound(myZstrFilePath) To UBound(myZstrFilePath)
        myXbisFileExist = myXobjFSO.FileExists(myZstrFilePath(i))
        If myXbisFileExist = True Then _
            myZstrFileName(i) = myXobjFSO.getFileName(myZstrFilePath(i))
    Next i
    Set myXobjFSO = Nothing
ExitPath:
End Sub

 '定型Ｐ_クリップボードにデータを格納する
Private Sub PfixDataPutInClipboard(ByVal myXvarInptData As Variant)
    If myXvarInptData = "" Then Exit Sub
  Dim myXdobClpBrd As New DataObject, myXvarClpBrdData As Variant
    With myXdobClpBrd
        .SetText myXvarInptData         '変数をDataObjectに格納
        .PutInClipboard                 'DataObjectのデータをクリップボードに格納
        .GetFromClipboard               'クリップボードからDataObjectにデータを取得
        myXvarClpBrdData = .GetText     'DataObjectのデータを変数に格納
    End With
End Sub

'DummyＰ_
Private Sub CsubDummy()
End Sub

'===============================================================================================

''◆ClassProc名_ファイルを選択してそのパスを取得する
'Private Sub instCSlctFilePath()
'  Dim Lc As Long
'  Dim myXlonFileCnt As Long, _
'        myZstrFileName() As String, myZstrFilePath() As String
'    'myZstrFileName(i) : ファイル名
'    'myZstrFilePath(i) : ファイルパス
''//クラス内変数への入力
'  Dim myXlonFDType As Long
'    myXlonFDType = msoFileDialogFilePicker
'    'myXlonFDType = msoFileDialogFilePicker : ファイルを選択
'    'myXlonFDType = msoFileDialogOpen       : ファイルを開く
'    'myXlonFDType = msoFileDialogSaveAs     : ファイルを保存
'  Dim myXstrDfltFldrPath As String
'    myXstrDfltFldrPath = "1"
'    'myXstrDfltFldrPath = ""  : デフォルトパス指定無し
'    'myXstrDfltFldrPath = "C" : Cドライブをデフォルトパスに指定
'    'myXstrDfltFldrPath = "1" : このブックの親フォルダをデフォルトパスに指定
'    'myXstrDfltFldrPath = "2" : アクティブブックの親フォルダをデフォルトパスに指定
'    'myXstrDfltFldrPath = "*" : デフォルトパスを指定
'  Dim myXstrDfltFilePath As String
'    myXstrDfltFilePath = "1"
'    'myXstrDfltFilePath = ""  : デフォルトパス指定無し
'    'myXstrDfltFilePath = "1" : このブックをデフォルトパスに指定
'    'myXstrDfltFilePath = "2" : アクティブブックをデフォルトパスに指定
'    'myXstrDfltFilePath = "*" : デフォルトパスを指定
'  Dim myXstrExtsn As String
'    myXstrExtsn = "PDF"
'  Dim myZstrAddFltr() As String: ReDim myZstrAddFltr(1, 2) As String
'    myZstrAddFltr(1, 1) = "PDFファイル"
'    myZstrAddFltr(1, 2) = "*.pdf"
'    'myZstrAddFltr(i, 1) : ファイルの候補を指定する文字列(ファイル)
'    'myZstrAddFltr(i, 2) : ファイルの候補を指定する文字列(フィルタ文字列)
'  Dim myXbisFltrClr As Boolean
'    myXbisFltrClr = False
'    'myXbisFltrClr = False : ファイルフィルタを初期化せずに追加する
'    'myXbisFltrClr = True  : ファイルフィルタを初期化する
'  Dim myXlonFltrIndx As Long
'    myXlonFltrIndx = 1
'    'myXlonFltrIndx = 1〜 : ファイルフィルタの初期選択
'  Dim myXlonIniView As Long
'    myXlonIniView = msoFileDialogViewList
'    'myXlonIniView = msoFileDialogViewDetails    : ファイルを詳細情報と共に一覧表示
'    'myXlonIniView = msoFileDialogViewLargeIcons : ファイルを大きいアイコンで表示
'    'myXlonIniView = msoFileDialogViewList       : ファイルを詳細情報なしで一覧表示
'    'myXlonIniView = msoFileDialogViewPreview    : ファイルの一覧を表示し、選択したファイルをプレビュー ウィンドウ枠に表示
'    'myXlonIniView = msoFileDialogViewProperties : ファイルの一覧を表示し、選択したファイルのプロパティをウィンドウ枠に表示
'    'myXlonIniView = msoFileDialogViewSmallIcons : ファイルを小さいアイコンで表示
'    'myXlonIniView = msoFileDialogViewThumbnail  : ファイルを縮小表示
'    'myXlonIniView = msoFileDialogViewTiles      : ファイルをアイコンで並べて表示
'    'myXlonIniView = msoFileDialogViewWebView    : ファイルを Web 表示
'  Dim myXbisMultSlct As Boolean
'    myXbisMultSlct = False
'    'myXbisMultSlct = False : 複数のファイルを選択不可能
'    'myXbisMultSlct = True  : 複数のファイルを選択可能
''//CSlctFilePathクラスモジュールのインスタンス生成
'  Dim myZlonTmp(1) As Long, Lo As Long: Lo = LBound(myZlonTmp)
'  Dim k As Long
'  Dim myXinsFilePath As CSlctFilePath: Set myXinsFilePath = New CSlctFilePath
'    With myXinsFilePath
'    '//クラス内変数への入力
'        .letFDType = myXlonFDType
'        .letDfltFldrPath = myXstrDfltFldrPath
'        .letDfltFilePath = myXstrDfltFilePath
'        .letExtsn = myXstrExtsn
'        .letAddFltr = myZstrAddFltr
'        .letFltrClr = myXbisFltrClr
'        .letFltrIndx = myXlonFltrIndx
'        .letIniView = myXlonIniView
'        .letMultSlct = myXbisMultSlct
'    '//クラス内プロシージャの実行とクラス内変数からの出力
'        .exeProc
'        myXlonFileCnt = .getFileCnt
'        If myXlonFileCnt <= 0 Then GoTo JumpPath
'        k = myXlonFileCnt + Lo - 1
'        ReDim myZstrFileName(k) As String
'        ReDim myZstrFilePath(k) As String
'        Lc = .getOptnBase
'        For k = 1 To myXlonFileCnt
'            myZstrFileName(k + Lo - 1) = .getFileNameAry(k + Lc - 1)
'            myZstrFilePath(k + Lo - 1) = .getFilePathAry(k + Lc - 1)
'        Next k
'    End With
'JumpPath:
'    Set myXinsFilePath = Nothing
'    Call variablesOfCSlctFilePath(myXlonFileCnt, myZstrFileName)     'Debug.Print
'End Sub
'Private Sub variablesOfCSlctFilePath( _
'            ByVal myXlonDataCnt As Long, ByRef myZvarField As Variant)
''//CSlctFilePathクラス内から出力した変数の内容確認
'    Debug.Print "データ数: " & myXlonDataCnt
'    If myXlonDataCnt <= 0 Then Exit Sub
'  Dim k As Long
'    For k = LBound(myZvarField) To UBound(myZvarField)
'        Debug.Print "データ" & k & ": " & myZvarField(k)
'    Next k
'End Sub
